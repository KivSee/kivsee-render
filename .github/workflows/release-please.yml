name: Release Please

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4
      - id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.RELEASE_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  build-and-attach:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux_x86_64
          - os: ubuntu-latest
            platform: linux_aarch64
          - os: ubuntu-latest
            platform: linux_armv7
          - os: macos-latest
            platform: macos_x86_64
          - os: macos-14
            platform: macos_arm64
          - os: windows-latest
            platform: windows_x86_64
    
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Mount bazel cache
        uses: actions/cache@v3
        with:
          path: "~/.cache/bazel"
          key: bazel-${{ matrix.os }}-${{ github.sha }}
          restore-keys: bazel-${{ matrix.os }}-

      - uses: bazel-contrib/setup-bazel@0.14.0
        with:
          bazelisk-cache: true
          disk-cache: ${{ github.workflow }}
          repository-cache: true            
          
      - name: Build platform-specific bindings
        run: |
          bazel build //bindings:kivsee_render_${{ matrix.platform }}_pkg
          
      - name: Upload package files to release
        if: runner.os != 'Windows'
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
        run: |
          cd bazel-bin/bindings
          gh release upload "$TAG_NAME" kivsee_render_${{ matrix.platform }}_pkg.tar
  
      - name: Upload package files to release (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
        run: |
          Set-Location bazel-bin\bindings
          gh release upload "$env:TAG_NAME" kivsee_render_${{ matrix.platform }}_pkg.tar
  